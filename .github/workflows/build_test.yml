name: Build, test, push
on:
  pull_request:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Leave it here for debug
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1

      - name: Registry auth
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=schedule
            type=raw,
          flavor: |
            latest=${{ github.ref_name == 'master' }}
            prefix=
            suffix=

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:foobar
          labels: ${{ steps.meta.outputs.labels }}

      - run: echo "${{ toJSON(steps.meta.outputs.tags) }}"

      - name: Run stress-api container
        run: |
          docker run -d -p 80:80 --name sng ${{ fromJSON(steps.meta.outputs.tags).tags[0] }}

      - name: Inspect
        run: |
          docker inspect sng

      - name: Test readiness
        run: |
          curl -X 'GET' 'http://localhost:80/v1.0/health/readiness' \
          -H 'accept: text/plain' \
          -H 'Content-Type: text/plain'

      - name: Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
