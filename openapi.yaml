openapi: "3.0.0"

info:
  title: Stress-ng REST API
  version: "1.0"
servers:
  - url: http://localhost:8080/v1.0

components:
  schemas:
    SNGSuccess:
      type: object
      properties:
        info:
          type: object
        retcode:
          type: integer
      example:
        info:
          some: run results
        retcode: 0
    SNGFailure:
      type: object
      properties:
        info:
          type: string
        retcode:
          type: integer
      example:
        info:
          some: error details
        retcode: 1
  responses:
    200SNGSuccess:
      description: Successful stress-ng run
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SNGSuccess"
    503SNGFailure:
      description: Failed stress-ng run
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SNGFailure"
  securitySchemes:
    sng_auth_token:
      type: apiKey
      name: X-Auth-Key
      in: header
      x-apikeyInfoFunc: app.apikey_auth

paths:
  /health/readiness:
    get:
      summary: Readiness probe handle
      operationId: app.readiness
      responses:
        200:
          $ref: "#/components/responses/200SNGSuccess"
        503:
          $ref: "#/components/responses/503SNGFailure"

  /runjob:
    post:
      summary: Send stress-ng jobfile to run it
      operationId: app.runjob
      requestBody:
        description: Stress-ng jobfile in plain text. [More examples](https://github.com/ColinIanKing/stress-ng/tree/master/example-jobs).
        content:
          text/plain:
            schema:
              x-body-name: jobfile # TODO move under 'requestBody' after next connexion update
              example: |
                vm 1
                timeout 1s
      responses:
        200:
          $ref: "#/components/responses/200SNGSuccess"
        503:
          $ref: "#/components/responses/503SNGFailure"
        # TODO: add 40X Unauthorized description
      security:
        - sng_auth_token: []
